name: build-linux-arm
on:
  push:
    paths-ignore:
      - "**/README.md"
  pull_request:
    paths-ignore:
      - "**/README.md"

jobs:
  build-rpi:
    runs-on: ubuntu-24.04
    strategy:
      matrix:
        configuration:
          # - { libs: armv6l, arch: armhf, prefix: arm-linux-gnueabihf }
          - { libs: aarch64, arch: arm64, prefix: aarch64-linux-gnu }
    env:
      ARCH: ${{matrix.configuration.libs}}
      # MULTISTRAP_ARCH: ${{matrix.configuration.multistrap_arch}}
      TARGET: linux${{matrix.configuration.libs}}
      # WORKDIR: "./apothecary"
      # SYSROOT: "./apothecary/raspbian"
      # TOOLCHAIN_ROOT: "/home/runner/work/apothecary/apothecary/raspbian"
      # TOOLCHAIN_PREFIX: ${{matrix.configuration.prefix}}
      CMAKE_CXX_COMPILER: ${{matrix.configuration.prefix}}-g++
      CMAKE_C_COMPILER: ${{matrix.configuration.prefix}}-gcc

      # CMAKE_CXX_COMPILER_LAUNCHER: ccache

      # CMAKE_CROSSCOMPILING: TRUE
      # TOOLCHAIN: ${{matrix.configuration.prefix}}-gcc
      # CMAKE_SYSROOT: ./apothecary/raspbian
      # CMAKE_FIND_ROOT_PATH: /usr/${{matrix.configuration.prefix}}

    steps:
      # - name: Apt Cross
      #   uses: awalsh128/cache-apt-pkgs-action@latest
      #   with:
      #     packages: gcc-${{matrix.configuration.prefix}} g++-${{matrix.configuration.prefix}}
      #     # multistrap unzip
      #     version: 1.0

      - name: Add foreign architecture
        shell: bash
        run: |
          sudo dpkg --add-architecture ${{matrix.configuration.arch}}

      - name: Is noble?
        shell: bash
        run: |
          cat /etc/os-release
      - name: Edit Ubuntu Sources
        shell: bash
        run: |
          sudo sed -i -e 's/Types:\ deb/Types:\ deb\nArchitecture: amd64/g' /etc/apt/sources.list.d/ubuntu.sources

      - name: Check
        shell: bash
        run: |
          sudo cat /etc/apt/sources.list.d/ubuntu.sources

      - name: Add Crosscompile Sources
        shell: bash
        run: |
          sudo touch /etc/apt/sources.list.d/arm.sources
          echo "Types: deb
          URIs: http://ports.ubuntu.com/ubuntu-ports
          Architecture: ${{matrix.configuration.arch}}
          Suites: noble noble-updates noble-back ports
          Components: main restricted universe multiverse
          Signed-By: /usr/share/keyrings/ubuntu-archive-keyring.gpg
          " | sudo tee -a /etc/apt/sources.list.d/arm.sources

      - name: Check
        shell: bash
        run: |
          sudo cat /etc/apt/sources.list.d/arm.sources

      - name: Apt-update
        shell: bash
        run: |
          sudo apt update

      # - name: Update Apt
      #   run: |
      #     sudo add-apt-repository ppa:ubuntu-toolchain-r/test
      #     sudo apt update

      - uses: actions/checkout@v4

      - name: Apt Packages & Cache
        uses: awalsh128/cache-apt-pkgs-action@latest
        with:
          packages: libasound2t64:${{matrix.configuration.arch}}
          #  gcc-${{matrix.configuration.prefix}} g++-${{matrix.configuration.prefix}}
          # multistrap unzip
          # alsa-utils libasound2-plugins
          # coreutils gperf build-essential pkgconf rsync
          version: 1.0

      # - name: ccache
      #   uses: hendrikmuhs/ccache-action@v1.2.14
      #   with:
      #     key: ${{ runner.os }}-${{ env.cache-name }}-${{ hashFiles('*.json') }}

      # - name: Cache raspbian folder
      #   uses: actions/cache@v4
      #   with:
      #     path: ./apothecary/raspbian
      #     key: raspbian-cache-2

      # - name: Check if folder exists
      #   id: folder-check
      #   run: >
      #     if [ -d $SYSROOT ]; then
      #       echo "Raspbian folder already exists. Skipping download and extract."
      #       echo "::set-output name=folder-exists::true"
      #     else
      #       echo "::set-output name=folder-exists::false"
      #     fi

      # - name: Download and extract tar file
      #   if: steps.folder-check.outputs.folder-exists == 'false'
      #   shell: bash
      #   run: |
      #     cd $WORKDIR
      #     wget https://sourceforge.net/projects/raspberry-pi-cross-compilers/files/Raspberry%20Pi%20GCC%20Cross-Compiler%20Toolchains/Bookworm/GCC%2014.2.0/Raspberry%20Pi%203A%2B%2C%203B%2B%2C%204%2C%205/cross-gcc-14.2.0-pi_3%2B.tar.gz --no-check-certificate
      #     tar xf cross-gcc-*.tar.gz
      #     rm cross-gcc-*.tar.gz
      #     mv cross-pi* raspbian

      - name: Script Install and Build
        # if: ${{matrix.configuration.libs}} == 'aarch64'
        shell: bash
        run: ./scripts/linux${{matrix.configuration.libs}}/install_and_build.sh

      # - name: Script Install
      #   if: ${{matrix.configuration.libs}} != 'aarch64'
      #   shell: bash
      #   run: ./scripts/$TARGET/install.sh

      # - name: Update Release
      #   uses: johnwbyrd/update-release@v1.0.0
      #   with:
      #     token: ${{ secrets.GITHUB_TOKEN }}
      #     tag: nightly
      #     release: nightly
      #     prerelease: false
      #     files: out/openFrameworksLibs_master_linux${{matrix.configuration.libs}}.tar.bz2
      #   if: github.repository == 'openframeworks/apothecary' && github.event_name == 'push' # && github.ref == 'refs/heads/master'

  # build-linux-arm6:
  #       runs-on: ubuntu-latest
  #       env:
  #        TARGET: "linuxarmv6l"
  #        SYSROOT: "/home/runner/work/apothecary/apothecary/scripts/linuxarmv6l/raspbian"
  #        TOOLCHAIN_ROOT: "/home/runner/work/apothecary/apothecary/scripts/linuxarmv6l/rpi_toolchain"
  #        TOOLCHAIN_PREFIX: "arm-linux-gnueabihf"
  #       steps:
  #       - uses: actions/checkout@v2
  #       - name: Scripts Calc Formula
  #         run: ./scripts/calculate_formulas.sh
  #       - name: Scripts Install
  #         run: ./scripts/$TARGET/install.sh
  #       - name: build
  #         run: ./scripts/build.sh
  #         env:
  #           GA_CI_SECRET: ${{ secrets.CI_SECRET }}
  #       - name: Update Release
  #         uses: johnwbyrd/update-release@v1.0.0
  #         with:
  #           token: ${{ secrets.GITHUB_TOKEN }}
  #           tag: nightly
  #           release: nightly
  #           prerelease: false
  #           files: out/openFrameworksLibs_master_linuxarmv6l.tar.bz2
  #         if: github.repository == 'openframeworks/apothecary' && github.event_name == 'push' && github.ref == 'refs/heads/master'
#  build-linux-arm7:
#        runs-on: ubuntu-latest
#        environment: CI
#        env:
#         TARGET: "linuxarmv7l"
#         SYSROOT: "/home/runner/archlinux"
#         TOOLCHAIN_ROOT: "/home/runner/rpi2_toolchain"
#         TOOLCHAIN_PREFIX: "arm-linux-gnueabihf"
#        steps:
#        - uses: actions/checkout@v2
#        - name: Scripts Calc Formula
#          run: ./scripts/calculate_formulas.sh
#        - name: Scripts Install
#          run: ./scripts/$TARGET/install.sh
#        - name: build
#          run: ./scripts/build.sh
#          env:
#            GA_CI_SECRET: ${{ secrets.CI_SECRET }}
#        - name: Update Release
#          uses: johnwbyrd/update-release@v1.0.0
#          with:
#            token: ${{ secrets.GITHUB_TOKEN }}
#            tag: nightly
#            release: nightly
#            prerelease: false
#            files: out/openFrameworksLibs_master_linuxarmv7l.tar.bz2
#          if: github.repository == 'openframeworks/apothecary' && github.event_name == 'push' && github.ref == 'refs/heads/master'
