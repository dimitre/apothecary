name: build-linux64

on:
  push:
    paths-ignore:
    - '**/README.md'
  pull_request:
    paths-ignore:
    - '**/README.md'

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  TARGET: "linux64"
  NO_FORCE: 1
  GA_CI_SECRET: ${{ secrets.CI_SECRET }}
  USE_ARTIFACT: true

jobs:

  build-linux64:
    runs-on: ubuntu-latest
    strategy:
        matrix:
          cfg:
          - {target: linux64, opt: gcc6}
          - {target: linux64, opt: gcc11}
    env:
      TARGET: ${{matrix.cfg.target}}
      OPT: ${{matrix.cfg.opt}}
    steps:
    - uses: actions/checkout@v4.1.7
    - name: Scripts Calc Formula - ${{matrix.cfg.target}} - ${{matrix.cfg.opt}}
      run: ./scripts/calculate_formulas.sh
    - name: Scripts Install
      run: ./scripts/linux/install.sh
    - name: Determine Release
      id: vars
      shell: bash
      run: |
        if [[ "${{ github.ref }}" == "refs/heads/master" ]]; then
          echo "RELEASE=nightly" >> $GITHUB_ENV
          echo "PRERELEASE=false" >> $GITHUB_ENV
        elif [[ "${{ github.ref }}" == "refs/heads/bleeding" ]]; then
          echo "RELEASE=bleeding" >> $GITHUB_ENV
          echo "PRERELEASE=true" >> $GITHUB_ENV
        else
          echo "RELEASE=bleeding" >> $GITHUB_ENV
          echo "PRERELEASE=true" >> $GITHUB_ENV
        fi
    - name: BuildLinux64
      working-directory: ${{env.GITHUB_WORKSPACE}}
      run: scripts/build.sh
      env:
        BUNDLE: ${{ matrix.bundle }}
    - name: Package
      if: (github.repository == 'openframeworks/apothecary' && github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/bleeding'))
      working-directory: ${{ env.GITHUB_WORKSPACE }}
      run: scripts/package.sh
      env:
        BUNDLE: ${{ matrix.bundle }}
    - name: Update Release 
      uses: johnwbyrd/update-release@v1.0.0
      if: (github.repository == 'openframeworks/apothecary' && github.event_name == 'push' && (github.ref == 'refs/heads/master' || github.ref == 'refs/heads/bleeding'))
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        tag: ${{ env.RELEASE }}
        release: ${{ env.RELEASE }}
        prerelease: ${{ env.PRERELEASE }}
        files: out/openFrameworksLibs_${{ env.RELEASE }}_${{ env.TARGET }}_${{ matrix.cfg.opt }}.tar.bz2
      